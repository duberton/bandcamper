name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  gradle-validation:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checking out sources
        uses: actions/checkout@v2

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

  build:
    name: Build app
    runs-on: ubuntu-latest
    needs:
      - gradle-validation

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./backend/gradlew -b backend/build.gradle.kts build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ./backend/build/libs
          if-no-files-found: error

      - name: Build and push the docker image
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        repository: ${{ secrets.DOCKER_HUB_USERNAME }}/bandcamper
        tags: ${{ github.sha }}, latest


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checking out sources
        uses: actions/checkout@v2

      - name: Helm tool installer
        uses: Azure/setup-helm@v1
        with:
          token: ${{ secrets.DOCKER_HUB_TOKEN }}