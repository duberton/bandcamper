name: Back-end Job CI/CD/CD

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - uses: eskatos/gradle-command-action@v1
        with:
          build-root-directory: backend/job
          wrapper-directory: backend/job
          arguments: installDist
  
      - name: Upload backend src code
        uses: actions/upload-artifact@v2
        with:
          name: bandcamper
          path: backend/job
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download backend job src code
        uses: actions/download-artifact@v2
        with:
          name: bandcamper

      - name: AWS ECR login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_JOB_REPOSITORY }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Builds the Docker image'
        run: |
          docker build -t ${{ secrets.AWS_ECR_JOB_SERVICE }}:${{ github.sha }} .

      - name: 'Pushes the image to ECR'
        run: |
          docker tag ${{ secrets.AWS_ECR_JOB_SERVICE }}:${{ github.sha }} ${{ secrets.AWS_ECR_JOB_REPOSITORY }}/${{ secrets.AWS_ECR_JOB_SERVICE }}:${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_JOB_REPOSITORY }}/${{ secrets.AWS_ECR_JOB_SERVICE }}:${{ github.sha }}

  rollout:
    name: Rollout
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checking out sources
        uses: actions/checkout@v2

      - name: Updating Charts appVersion
        uses: mikefarah/yq@v4.6.3
        with:
          cmd: yq eval '.appVersion = "${{ github.sha }}"' -i infrastructure/helm/Chart.yaml

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bumping docker image tag to ${{ github.sha }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}